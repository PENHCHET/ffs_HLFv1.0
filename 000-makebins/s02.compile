#!/bin/bash
source `dirname $(realpath $0)`/../confparams.sh
source `dirname $(realpath $0)`/../commonfun.sh
result=0

echo
echo -e "${FFS_YEL}####################${FFS_NOC}"
echo -e "${FFS_YEL} Compiling binaries ${FFS_NOC}"
echo -e "${FFS_BLU} Script :${FFS_NOC}" "$0"
echo -e "${FFS_YEL}####################${FFS_NOC}"
echo "FFS_FABRIC_ROOT = "$FFS_FABRIC_ROOT
echo "FFS_FABRIC_BIN  = "$FFS_FABRIC_BIN
echo "FFS_FFS_OS_ARCH = "$FFS_OS_ARCH

echo "Removing existing containers and images ..."
_rmc 
_rmi

export GOPATH=${FFS_ROOT}/000-makebins/hlf-workspace
echo "Making bins ..."
CURDIR=$PWD
cd $FFS_FABRIC_ROOT
make dist-clean 
(( result = result + $? ))
make native
(( result = result + $? ))
cd $CURDIR

test -d $FFS_FABRIC_BIN || mkdir $FFS_FABRIC_BIN
cp $FFS_FABRIC_ROOT/build/bin/cryptogen $FFS_FABRIC_BIN/.
cp $FFS_FABRIC_ROOT/build/bin/configtxgen $FFS_FABRIC_BIN/.
cp $FFS_FABRIC_ROOT/build/bin/configtxlator $FFS_FABRIC_BIN/.
cp $FFS_FABRIC_ROOT/build/bin/orderer $FFS_FABRIC_BIN/.
cp $FFS_FABRIC_ROOT/build/bin/peer $FFS_FABRIC_BIN/.

echo "Binaries :"
ls -la $FFS_FABRIC_BIN/*

echo "Containers (should be empty list)"
docker ps -a

echo "Images"
docker images

exit $result 
 
