#!/bin/bash
set -e
source ../confparams.sh
result=0

CRYPTO_CONFIG="./crypto-config.yaml"

echo
echo -e "${FFS_YEL}############################################${FFS_NOC}"
echo -e "${FFS_YEL} Generating crypto-config.yaml file         ${FFS_NOC}"
echo -e "${FFS_BLU} Script :${FFS_NOC}" "$0"
echo -e "${FFS_YEL}############################################${FFS_NOC}"
echo "GOPATH          = "$GOPATH
echo "FFS_ORGS        = "$FFS_ORGS
echo "FFS_ORG_NODES   = "$FFS_ORG_NODES
echo "FFS_DOMAIN      = "$FFS_DOMAIN

test -d ./logs || mkdir ./logs

echo "OrdererOrgs:" > $CRYPTO_CONFIG
i=1
while [[ $i -le $FFS_ORGS ]]; do
	echo "  - Name: org${i}"  >> $CRYPTO_CONFIG
	echo "    Domain: org${i}.${FFS_DOMAIN}"  >> $CRYPTO_CONFIG
	echo "    Template:"  >> $CRYPTO_CONFIG
	echo "      Count: ${FFS_ORG_NODES}"  >> $CRYPTO_CONFIG
	echo "    Users:"  >> $CRYPTO_CONFIG
	echo "      Count: 1"   >> $CRYPTO_CONFIG
	(( i = i + 1 ))
done

echo "PeerOrgs:" >> $CRYPTO_CONFIG
i=1
while [[ $i -le $FFS_ORGS ]]; do
	echo "  - Name: org${i}"  >> $CRYPTO_CONFIG
	echo "    Domain: org${i}.${FFS_DOMAIN}"  >> $CRYPTO_CONFIG
	echo "    Template:"  >> $CRYPTO_CONFIG
	echo "      Count: ${FFS_ORG_NODES}"  >> $CRYPTO_CONFIG
	echo "    Users:"  >> $CRYPTO_CONFIG
	echo "      Count: 1"   >> $CRYPTO_CONFIG
	(( i = i + 1 ))
done

echo -e "${FFS_YEL} generated file $CRYPTO_CONFIG : ${FFS_NOC}"
cat $CRYPTO_CONFIG

if [[ .$result. == .0. ]]; then
        echo -e "Script result: ${FFS_GRE}SUCCESS${FFS_NOC}"
else
        echo -e "Script result: ${FFS_RED}FAILED${FFS_NOC}"
fi

exit $result 
