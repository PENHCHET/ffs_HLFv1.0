#!/bin/bash
source ../confparams.sh
result=0

echo
echo -e "${FFS_YEL}############################################${FFS_NOC}"
echo -e "${FFS_YEL} Creating channel  ${FFS_NOC}"
echo -e "${FFS_BLU} Script :${FFS_NOC}" "$0"
echo -e "${FFS_YEL}############################################${FFS_NOC}"
echo "GOPATH         = "$GOPATH
echo "FFS_ORGS       = "$FFS_ORGS
echo "FFS_ORG_NODES  = "$FFS_ORG_NODES
echo "FFS_DOMAIN     = "$FFS_DOMAIN

### question1: do I need peer certs to create channel?
### question2: do i have to copy chname.block file to other orgs ?

function crch() {
	ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/org1.foo.com/orderers/orderer0.org1.foo.com/msp/tlscacerts/tlsca.org1.foo.com-cert.pem
	echo
	echo -e "${RED}--->>> Creating channel <<<---${NOC}"
	echo -e "${BLU}### attempting to execute :${YEL} peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile $ORDERER_CA ${NOC}"
	docker exec -ti \
	-e GOPATH=/opt/gopath \
	-e CORE_PEER_LOCALMSPID=PeerOrg1MSP \
	-e CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.foo.com/users/Admin@org1.foo.com/msp \
	-e CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.foo.com/peers/peer0.org1.foo.com/tls/ca.crt \
	-e CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.foo.com/peers/peer0.org1.foo.com/tls/server.key \
	-e CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.foo.com/peers/peer0.org1.foo.com/tls/server.crt \
	-e CORE_PEER_TLS_ENABLED=true \
	-e CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock \
	-e CORE_PEER_ID=cli \
	-e CORE_LOGGING_LEVEL=DEBUG \
	-e CORE_PEER_ADDRESS=peer0.org1.foo.com:7051 \
		cli /bin/bash -c "env | grep CORE; peer channel create -o orderer0.org1.foo.com:7050 -c $FFS_CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile $ORDERER_CA" 
	RC=$?
	if [[ .$RC. == .0. ]]; then
		echo -e "###=== Result : ${GRE}success${NOC} ===###"
	else
		echo -e "###=== Result : ${RED}failed${NOC}  ===###"
		return 1
	fi
	return 0	
}


echo "#### block file used for peer channel join - it should be empty now." 
# in production this file need to be distributed to other orgs ???
docker exec cli /bin/bash -c "ls -l /opt/gopath/src/github.com/hyperledger/fabric/peer/* | grep $FFS_CHANNEL_NAME" || true
echo "####"

crch
(( result = result + $? ))

echo "#### block file used for peer channel join" 
docker exec cli /bin/bash -c "ls -l /opt/gopath/src/github.com/hyperledger/fabric/peer/* | grep $FFS_CHANNEL_NAME" || true
echo "####"

echo "#### coping $FFS_CHANNEL_NAME.block file to local filesystem "
docker cp cli:/opt/gopath/src/github.com/hyperledger/fabric/peer/$FFS_CHANNEL_NAME.block ./logs/$FFS_CHANNEL_NAME.block-aftercrch
(( result = result + $? ))
md5sum ./logs/$FFS_CHANNEL_NAME.block-aftercrch | tee ./logs/$FFS_CHANNEL_NAME.block-aftercrch.md5

if [[ .$result. == .0. ]]; then
	echo -e "Final result: ${FFS_GRE}SUCCESS${FFS_NOC}"
else
	echo -e "Final result: ${FFS_RED}FAILED${FFS_NOC}"
fi

exit $result 
